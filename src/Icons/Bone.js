import * as React from 'react';
import { iconType } from 'types';
import createIcon from '../helpers/createIcon';

const Bone = ({ color, strokeWidth, set }) => {
  const Broken = () => (
    <g>
      <path
        d="M14.1073 12.7213C14.7401 12.0884 15.4685 11.567 16.2614 11.1734C16.9411 10.836 17.7411 11 18.5 11C19.8807 11 21 9.88071 21 8.5C21 7.11929 19.8807 6 18.5 6C18.3061 6 18.1174 6.02207 17.9361 6.06385C17.9779 5.88264 18 5.6939 18 5.5C18 4.11929 16.8807 3 15.5 3C14.1193 3 13 4.11929 13 5.5C13 6.25898 13.1641 7.05919 12.8266 7.739"
        stroke={color}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
      <path
        d="M11.9487 15C11.6523 15.3969 11.3929 15.8192 11.1734 16.2615C10.836 16.9412 11 17.7412 11 18.5C11 19.8807 9.88071 21 8.5 21C7.11929 21 6 19.8807 6 18.5C6 18.3061 6.02207 18.1174 6.06385 17.9362C5.88264 17.9779 5.6939 18 5.5 18C4.11929 18 3 16.8807 3 15.5C3 14.1193 4.11929 13 5.5 13C6.25893 13 7.05907 13.1641 7.73885 12.8267C8.53173 12.4331 9.2601 11.9116 9.89295 11.2788L10.5859 10.5858"
        stroke={color}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  );
  const Curved = () => (
    <g>
      <path
        d="M18 5.5C18 5.6939 17.9779 5.88264 17.9362 6.06385C18.1174 6.02207 18.3061 6 18.5 6C19.8807 6 21 7.11929 21 8.5C21 9.88071 19.8807 11 18.5 11C17.7411 11 16.9411 10.836 16.2614 11.1734C15.4685 11.567 14.7401 12.0884 14.1073 12.7213L12.7214 14.1072C12.0885 14.7401 11.567 15.4685 11.1734 16.2615C10.836 16.9412 11 17.7412 11 18.5C11 19.8807 9.88071 21 8.5 21C7.11929 21 6 19.8807 6 18.5C6 18.3061 6.02207 18.1174 6.06385 17.9362C5.88264 17.9779 5.6939 18 5.5 18C4.11929 18 3 16.8807 3 15.5C3 14.1193 4.11929 13 5.5 13C6.25893 13 7.05907 13.1641 7.73885 12.8266C8.53173 12.433 9.2601 11.9116 9.89295 11.2787L11.2788 9.89284C11.9116 9.26007 12.433 8.53178 12.8266 7.739C13.1641 7.05919 13 6.25898 13 5.5C13 4.11929 14.1193 3 15.5 3C16.8807 3 18 4.11929 18 5.5Z"
        stroke={color}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  );
  const Duotone = () => (
    <g>
      <path
        opacity="0.15"
        d="M18 5.5C18 5.6939 17.9779 5.88264 17.9362 6.06385C18.1174 6.02207 18.3061 6 18.5 6C19.8807 6 21 7.11929 21 8.5C21 9.88071 19.8807 11 18.5 11C17.7411 11 16.9411 10.836 16.2614 11.1734C15.4685 11.567 14.7401 12.0884 14.1073 12.7213L12.7214 14.1072C12.0885 14.7401 11.567 15.4685 11.1734 16.2615C10.836 16.9412 11 17.7412 11 18.5C11 19.8807 9.88071 21 8.5 21C7.11929 21 6 19.8807 6 18.5C6 18.3061 6.02207 18.1174 6.06385 17.9362C5.88264 17.9779 5.6939 18 5.5 18C4.11929 18 3 16.8807 3 15.5C3 14.1193 4.11929 13 5.5 13C6.25893 13 7.05907 13.1641 7.73885 12.8266C8.53173 12.433 9.2601 11.9116 9.89295 11.2787L11.2788 9.89284C11.9116 9.26007 12.433 8.53178 12.8266 7.739C13.1641 7.05919 13 6.25898 13 5.5C13 4.11929 14.1193 3 15.5 3C16.8807 3 18 4.11929 18 5.5Z"
        fill={color}
      />
      <path
        d="M18 5.5C18 5.6939 17.9779 5.88264 17.9362 6.06385C18.1174 6.02207 18.3061 6 18.5 6C19.8807 6 21 7.11929 21 8.5C21 9.88071 19.8807 11 18.5 11C17.7411 11 16.9411 10.836 16.2614 11.1734C15.4685 11.567 14.7401 12.0884 14.1073 12.7213L12.7214 14.1072C12.0885 14.7401 11.567 15.4685 11.1734 16.2615C10.836 16.9412 11 17.7412 11 18.5C11 19.8807 9.88071 21 8.5 21C7.11929 21 6 19.8807 6 18.5C6 18.3061 6.02207 18.1174 6.06385 17.9362C5.88264 17.9779 5.6939 18 5.5 18C4.11929 18 3 16.8807 3 15.5C3 14.1193 4.11929 13 5.5 13C6.25893 13 7.05907 13.1641 7.73885 12.8266C8.53173 12.433 9.2601 11.9116 9.89295 11.2787L11.2788 9.89284C11.9116 9.26007 12.433 8.53178 12.8266 7.739C13.1641 7.05919 13 6.25898 13 5.5C13 4.11929 14.1193 3 15.5 3C16.8807 3 18 4.11929 18 5.5Z"
        stroke={color}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  );
  const Outline = () => (
    <g>
      <path
        d="M18 5.5C18 5.6939 17.9779 5.88264 17.9362 6.06385C18.1174 6.02207 18.3061 6 18.5 6C19.8807 6 21 7.11929 21 8.5C21 9.88071 19.8807 11 18.5 11C17.7411 11 16.9411 10.836 16.2614 11.1734C15.4685 11.567 14.7401 12.0884 14.1073 12.7213L12.7214 14.1072C12.0885 14.7401 11.567 15.4685 11.1734 16.2615C10.836 16.9412 11 17.7412 11 18.5C11 19.8807 9.88071 21 8.5 21C7.11929 21 6 19.8807 6 18.5C6 18.3061 6.02207 18.1174 6.06385 17.9362C5.88264 17.9779 5.6939 18 5.5 18C4.11929 18 3 16.8807 3 15.5C3 14.1193 4.11929 13 5.5 13C6.25893 13 7.05907 13.1641 7.73885 12.8266C8.53173 12.433 9.2601 11.9116 9.89295 11.2787L11.2788 9.89284C11.9116 9.26007 12.433 8.53178 12.8266 7.739C13.1641 7.05919 13 6.25898 13 5.5C13 4.11929 14.1193 3 15.5 3C16.8807 3 18 4.11929 18 5.5Z"
        stroke={color}
        strokeWidth={strokeWidth}
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </g>
  );

  switch (set) {
    case 'broken':
      return <Broken />;
    case 'curved':
      return <Curved />;
    case 'duotone':
      return <Duotone />;
    case 'outline':
      return <Outline />;
    default:
      return <Outline />;
  }
};

Bone.propTypes = {
  props: iconType,
};

Bone.displayName = 'Bone';
export default createIcon(Bone);
